//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace Ethereality
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::Ethereality.Ethereality_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::Ethereality.Ethereality_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::Ethereality.Ethereality_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace Ethereality.Ethereality_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[44];
            _typeNameTable[0] = "Ethereality.ViewModel.ViewModelLocator";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "Ethereality.ViewModel.MainViewModel";
            _typeNameTable[3] = "GalaSoft.MvvmLight.ViewModelBase";
            _typeNameTable[4] = "GalaSoft.MvvmLight.ObservableObject";
            _typeNameTable[5] = "Syncfusion.UI.Xaml.Controls.Input.SfCalendar";
            _typeNameTable[6] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[7] = "System.Windows.Input.ICommand";
            _typeNameTable[8] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[9] = "Windows.UI.Xaml.Controls.ControlTemplate";
            _typeNameTable[10] = "Boolean";
            _typeNameTable[11] = "Windows.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[12] = "Syncfusion.UI.Xaml.Controls.Input.DateTimeCollection";
            _typeNameTable[13] = "System.DateTime";
            _typeNameTable[14] = "System.ValueType";
            _typeNameTable[15] = "Int32";
            _typeNameTable[16] = "System.DayOfWeek";
            _typeNameTable[17] = "System.Enum";
            _typeNameTable[18] = "System.DateTimeKind";
            _typeNameTable[19] = "Int64";
            _typeNameTable[20] = "TimeSpan";
            _typeNameTable[21] = "Syncfusion.UI.Xaml.Controls.Input.SelectionMode";
            _typeNameTable[22] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>";
            _typeNameTable[23] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>";
            _typeNameTable[24] = "Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment";
            _typeNameTable[25] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[26] = "String";
            _typeNameTable[27] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[28] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Controls.Input.DateRange>";
            _typeNameTable[29] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Controls.Input.DateRange>";
            _typeNameTable[30] = "Syncfusion.UI.Xaml.Controls.Input.DateRange";
            _typeNameTable[31] = "Syncfusion.UI.Xaml.Controls.Input.DayNameDisplayMode";
            _typeNameTable[32] = "System.Globalization.CultureInfo";
            _typeNameTable[33] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[34] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[35] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[36] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[37] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[38] = "Microsoft.Xaml.Interactions.Core.InvokeCommandAction";
            _typeNameTable[39] = "Windows.UI.Xaml.Data.IValueConverter";
            _typeNameTable[40] = "Ethereality.MainPage";
            _typeNameTable[41] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[42] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[43] = "Ethereality.SecondPage";

            _typeTable = new global::System.Type[44];
            _typeTable[0] = typeof(global::Ethereality.ViewModel.ViewModelLocator);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::Ethereality.ViewModel.MainViewModel);
            _typeTable[3] = typeof(global::GalaSoft.MvvmLight.ViewModelBase);
            _typeTable[4] = typeof(global::GalaSoft.MvvmLight.ObservableObject);
            _typeTable[5] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar);
            _typeTable[6] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[7] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[8] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[9] = typeof(global::Windows.UI.Xaml.Controls.ControlTemplate);
            _typeTable[10] = typeof(global::System.Boolean);
            _typeTable[11] = typeof(global::Windows.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[12] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.DateTimeCollection);
            _typeTable[13] = typeof(global::System.DateTime);
            _typeTable[14] = typeof(global::System.ValueType);
            _typeTable[15] = typeof(global::System.Int32);
            _typeTable[16] = typeof(global::System.DayOfWeek);
            _typeTable[17] = typeof(global::System.Enum);
            _typeTable[18] = typeof(global::System.DateTimeKind);
            _typeTable[19] = typeof(global::System.Int64);
            _typeTable[20] = typeof(global::System.TimeSpan);
            _typeTable[21] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.SelectionMode);
            _typeTable[22] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>);
            _typeTable[23] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>);
            _typeTable[24] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment);
            _typeTable[25] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[26] = typeof(global::System.String);
            _typeTable[27] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[28] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Controls.Input.DateRange>);
            _typeTable[29] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Controls.Input.DateRange>);
            _typeTable[30] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.DateRange);
            _typeTable[31] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.DayNameDisplayMode);
            _typeTable[32] = typeof(global::System.Globalization.CultureInfo);
            _typeTable[33] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[34] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[35] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[36] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[37] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[38] = typeof(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction);
            _typeTable[39] = typeof(global::Windows.UI.Xaml.Data.IValueConverter);
            _typeTable[40] = typeof(global::Ethereality.MainPage);
            _typeTable[41] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[42] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[43] = typeof(global::Ethereality.SecondPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_ViewModelLocator() { return new global::Ethereality.ViewModel.ViewModelLocator(); }
        private object Activate_4_ObservableObject() { return new global::GalaSoft.MvvmLight.ObservableObject(); }
        private object Activate_5_SfCalendar() { return new global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar(); }
        private object Activate_12_DateTimeCollection() { return new global::Syncfusion.UI.Xaml.Controls.Input.DateTimeCollection(); }
        private object Activate_22_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>(); }
        private object Activate_23_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>(); }
        private object Activate_24_CalendarAppointment() { return new global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment(); }
        private object Activate_28_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Controls.Input.DateRange>(); }
        private object Activate_29_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Controls.Input.DateRange>(); }
        private object Activate_34_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_36_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_37_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_38_InvokeCommandAction() { return new global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction(); }
        private object Activate_40_MainPage() { return new global::Ethereality.MainPage(); }
        private object Activate_43_SecondPage() { return new global::Ethereality.SecondPage(); }
        private void VectorAdd_12_DateTimeCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.DateTime>)instance;
            var newItem = (global::System.DateTime)item;
            collection.Add(newItem);
        }
        private void VectorAdd_22_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment)item;
            collection.Add(newItem);
        }
        private void VectorAdd_23_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment)item;
            collection.Add(newItem);
        }
        private void VectorAdd_28_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Controls.Input.DateRange>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Controls.Input.DateRange)item;
            collection.Add(newItem);
        }
        private void VectorAdd_29_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Controls.Input.DateRange>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Controls.Input.DateRange)item;
            collection.Add(newItem);
        }
        private void VectorAdd_34_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Ethereality.ViewModel.ViewModelLocator
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_ViewModelLocator;
                userType.AddMemberName("Main");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Ethereality.ViewModel.MainViewModel
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 3:   //  GalaSoft.MvvmLight.ViewModelBase
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ObservableObject"));
                xamlType = userType;
                break;

            case 4:   //  GalaSoft.MvvmLight.ObservableObject
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_ObservableObject;
                xamlType = userType;
                break;

            case 5:   //  Syncfusion.UI.Xaml.Controls.Input.SfCalendar
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_5_SfCalendar;
                userType.AddMemberName("ScrollNextCommand");
                userType.AddMemberName("ScrollPreviousCommand");
                userType.AddMemberName("ScrollNextYearCommand");
                userType.AddMemberName("ScrollPreviousYearCommand");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("PreviousScrollButtonTemplate");
                userType.AddMemberName("NextScrollButtonTemplate");
                userType.AddMemberName("ShowNavigationButton");
                userType.AddMemberName("BlackOutCellTemplate");
                userType.AddMemberName("CellTemplate");
                userType.AddMemberName("CellTemplateSelector");
                userType.AddMemberName("BlackOutDates");
                userType.AddMemberName("SelectionMode");
                userType.AddMemberName("Appointment");
                userType.AddMemberName("AppointmentTemplate");
                userType.AddMemberName("SelectedDateBackground");
                userType.AddMemberName("SelectedDate");
                userType.AddMemberName("SelectedDates");
                userType.AddMemberName("DisplayDate");
                userType.AddMemberName("DayNameCellTemplate");
                userType.AddMemberName("DayNameDisplayMode");
                userType.AddMemberName("FirstDayofWeek");
                userType.AddMemberName("Culture");
                userType.AddMemberName("VisibleMinDate");
                userType.AddMemberName("VisibleMaxDate");
                userType.AddMemberName("DisabledCellTemplate");
                userType.AddMemberName("VisibleDates");
                xamlType = userType;
                break;

            case 6:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  System.Windows.Input.ICommand
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 8:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Windows.UI.Xaml.Controls.ControlTemplate
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  Boolean
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Windows.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Syncfusion.UI.Xaml.Controls.Input.DateTimeCollection
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_12_DateTimeCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  System.DateTime
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("Date");
                userType.AddMemberName("Day");
                userType.AddMemberName("DayOfWeek");
                userType.AddMemberName("DayOfYear");
                userType.AddMemberName("Hour");
                userType.AddMemberName("Kind");
                userType.AddMemberName("Millisecond");
                userType.AddMemberName("Minute");
                userType.AddMemberName("Month");
                userType.AddMemberName("Second");
                userType.AddMemberName("Ticks");
                userType.AddMemberName("TimeOfDay");
                userType.AddMemberName("Year");
                xamlType = userType;
                break;

            case 14:   //  System.ValueType
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 15:   //  Int32
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  System.DayOfWeek
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Sunday", global::System.DayOfWeek.Sunday);
                userType.AddEnumValue("Monday", global::System.DayOfWeek.Monday);
                userType.AddEnumValue("Tuesday", global::System.DayOfWeek.Tuesday);
                userType.AddEnumValue("Wednesday", global::System.DayOfWeek.Wednesday);
                userType.AddEnumValue("Thursday", global::System.DayOfWeek.Thursday);
                userType.AddEnumValue("Friday", global::System.DayOfWeek.Friday);
                userType.AddEnumValue("Saturday", global::System.DayOfWeek.Saturday);
                xamlType = userType;
                break;

            case 17:   //  System.Enum
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 18:   //  System.DateTimeKind
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Unspecified", global::System.DateTimeKind.Unspecified);
                userType.AddEnumValue("Utc", global::System.DateTimeKind.Utc);
                userType.AddEnumValue("Local", global::System.DateTimeKind.Local);
                xamlType = userType;
                break;

            case 19:   //  Int64
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  TimeSpan
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  Syncfusion.UI.Xaml.Controls.Input.SelectionMode
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Single", global::Syncfusion.UI.Xaml.Controls.Input.SelectionMode.Single);
                userType.AddEnumValue("Multiple", global::Syncfusion.UI.Xaml.Controls.Input.SelectionMode.Multiple);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Controls.Input.SelectionMode.None);
                xamlType = userType;
                break;

            case 22:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>"));
                userType.CollectionAdd = VectorAdd_22_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_23_Collection;
                userType.CollectionAdd = VectorAdd_23_Collection;
                xamlType = userType;
                break;

            case 24:   //  Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_24_CalendarAppointment;
                userType.AddMemberName("StartTime");
                userType.AddMemberName("EndTime");
                userType.AddMemberName("Subject");
                userType.AddMemberName("Color");
                xamlType = userType;
                break;

            case 25:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  String
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Controls.Input.DateRange>
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Controls.Input.DateRange>"));
                userType.CollectionAdd = VectorAdd_28_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Controls.Input.DateRange>
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_29_Collection;
                userType.CollectionAdd = VectorAdd_29_Collection;
                xamlType = userType;
                break;

            case 30:   //  Syncfusion.UI.Xaml.Controls.Input.DateRange
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("StartDate");
                userType.AddMemberName("EndDate");
                xamlType = userType;
                break;

            case 31:   //  Syncfusion.UI.Xaml.Controls.Input.DayNameDisplayMode
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("AbbreviatedDayNames", global::Syncfusion.UI.Xaml.Controls.Input.DayNameDisplayMode.AbbreviatedDayNames);
                userType.AddEnumValue("DayNames", global::Syncfusion.UI.Xaml.Controls.Input.DayNameDisplayMode.DayNames);
                xamlType = userType;
                break;

            case 32:   //  System.Globalization.CultureInfo
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 34:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_34_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 35:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 36:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_36_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 37:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_37_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  Microsoft.Xaml.Interactions.Core.InvokeCommandAction
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_38_InvokeCommandAction;
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("InputConverter");
                userType.AddMemberName("InputConverterParameter");
                userType.AddMemberName("InputConverterLanguage");
                xamlType = userType;
                break;

            case 39:   //  Windows.UI.Xaml.Data.IValueConverter
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  Ethereality.MainPage
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_40_MainPage;
                userType.AddMemberName("Vm");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 42:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 43:   //  Ethereality.SecondPage
                userType = new global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_43_SecondPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Reports.Syncfusion_SfReportViewer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_ViewModelLocator_Main(object instance)
        {
            var that = (global::Ethereality.ViewModel.ViewModelLocator)instance;
            return that.Main;
        }
        private object get_1_SfCalendar_ScrollNextCommand(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.ScrollNextCommand;
        }
        private object get_2_SfCalendar_ScrollPreviousCommand(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.ScrollPreviousCommand;
        }
        private object get_3_SfCalendar_ScrollNextYearCommand(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.ScrollNextYearCommand;
        }
        private object get_4_SfCalendar_ScrollPreviousYearCommand(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.ScrollPreviousYearCommand;
        }
        private object get_5_SfCalendar_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.HeaderTemplate;
        }
        private void set_5_SfCalendar_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_6_SfCalendar_PreviousScrollButtonTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.PreviousScrollButtonTemplate;
        }
        private void set_6_SfCalendar_PreviousScrollButtonTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.PreviousScrollButtonTemplate = (global::Windows.UI.Xaml.Controls.ControlTemplate)Value;
        }
        private object get_7_SfCalendar_NextScrollButtonTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.NextScrollButtonTemplate;
        }
        private void set_7_SfCalendar_NextScrollButtonTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.NextScrollButtonTemplate = (global::Windows.UI.Xaml.Controls.ControlTemplate)Value;
        }
        private object get_8_SfCalendar_ShowNavigationButton(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.ShowNavigationButton;
        }
        private void set_8_SfCalendar_ShowNavigationButton(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.ShowNavigationButton = (global::System.Boolean)Value;
        }
        private object get_9_SfCalendar_BlackOutCellTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.BlackOutCellTemplate;
        }
        private void set_9_SfCalendar_BlackOutCellTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.BlackOutCellTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_10_SfCalendar_CellTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.CellTemplate;
        }
        private void set_10_SfCalendar_CellTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.CellTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_11_SfCalendar_CellTemplateSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.CellTemplateSelector;
        }
        private void set_11_SfCalendar_CellTemplateSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.CellTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_12_SfCalendar_BlackOutDates(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.BlackOutDates;
        }
        private void set_12_SfCalendar_BlackOutDates(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.BlackOutDates = (global::Syncfusion.UI.Xaml.Controls.Input.DateTimeCollection)Value;
        }
        private object get_13_DateTime_Date(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Date;
        }
        private object get_14_DateTime_Day(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Day;
        }
        private object get_15_DateTime_DayOfWeek(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.DayOfWeek;
        }
        private object get_16_DateTime_DayOfYear(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.DayOfYear;
        }
        private object get_17_DateTime_Hour(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Hour;
        }
        private object get_18_DateTime_Kind(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Kind;
        }
        private object get_19_DateTime_Millisecond(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Millisecond;
        }
        private object get_20_DateTime_Minute(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Minute;
        }
        private object get_21_DateTime_Month(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Month;
        }
        private object get_22_DateTime_Second(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Second;
        }
        private object get_23_DateTime_Ticks(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Ticks;
        }
        private object get_24_DateTime_TimeOfDay(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.TimeOfDay;
        }
        private object get_25_DateTime_Year(object instance)
        {
            var that = (global::System.DateTime)instance;
            return that.Year;
        }
        private object get_26_SfCalendar_SelectionMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.SelectionMode;
        }
        private void set_26_SfCalendar_SelectionMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.SelectionMode = (global::Syncfusion.UI.Xaml.Controls.Input.SelectionMode)Value;
        }
        private object get_27_SfCalendar_Appointment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.Appointment;
        }
        private void set_27_SfCalendar_Appointment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.Appointment = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>)Value;
        }
        private object get_28_CalendarAppointment_StartTime(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment)instance;
            return that.StartTime;
        }
        private void set_28_CalendarAppointment_StartTime(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment)instance;
            that.StartTime = (global::System.DateTime)Value;
        }
        private object get_29_CalendarAppointment_EndTime(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment)instance;
            return that.EndTime;
        }
        private void set_29_CalendarAppointment_EndTime(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment)instance;
            that.EndTime = (global::System.DateTime)Value;
        }
        private object get_30_CalendarAppointment_Subject(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment)instance;
            return that.Subject;
        }
        private void set_30_CalendarAppointment_Subject(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment)instance;
            that.Subject = (global::System.String)Value;
        }
        private object get_31_CalendarAppointment_Color(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment)instance;
            return that.Color;
        }
        private void set_31_CalendarAppointment_Color(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment)instance;
            that.Color = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_32_SfCalendar_AppointmentTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.AppointmentTemplate;
        }
        private void set_32_SfCalendar_AppointmentTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.AppointmentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_33_SfCalendar_SelectedDateBackground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.SelectedDateBackground;
        }
        private void set_33_SfCalendar_SelectedDateBackground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.SelectedDateBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_34_SfCalendar_SelectedDate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.SelectedDate;
        }
        private void set_34_SfCalendar_SelectedDate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.SelectedDate = (global::System.Object)Value;
        }
        private object get_35_SfCalendar_SelectedDates(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.SelectedDates;
        }
        private void set_35_SfCalendar_SelectedDates(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.SelectedDates = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Controls.Input.DateRange>)Value;
        }
        private object get_36_DateRange_StartDate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.DateRange)instance;
            return that.StartDate;
        }
        private void set_36_DateRange_StartDate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.DateRange)instance;
            that.StartDate = (global::System.DateTime)Value;
        }
        private object get_37_DateRange_EndDate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.DateRange)instance;
            return that.EndDate;
        }
        private void set_37_DateRange_EndDate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.DateRange)instance;
            that.EndDate = (global::System.DateTime)Value;
        }
        private object get_38_SfCalendar_DisplayDate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.DisplayDate;
        }
        private void set_38_SfCalendar_DisplayDate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.DisplayDate = (global::System.Object)Value;
        }
        private object get_39_SfCalendar_DayNameCellTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.DayNameCellTemplate;
        }
        private void set_39_SfCalendar_DayNameCellTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.DayNameCellTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_40_SfCalendar_DayNameDisplayMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.DayNameDisplayMode;
        }
        private void set_40_SfCalendar_DayNameDisplayMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.DayNameDisplayMode = (global::Syncfusion.UI.Xaml.Controls.Input.DayNameDisplayMode)Value;
        }
        private object get_41_SfCalendar_FirstDayofWeek(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.FirstDayofWeek;
        }
        private void set_41_SfCalendar_FirstDayofWeek(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.FirstDayofWeek = (global::System.DayOfWeek)Value;
        }
        private object get_42_SfCalendar_Culture(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.Culture;
        }
        private void set_42_SfCalendar_Culture(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.Culture = (global::System.Globalization.CultureInfo)Value;
        }
        private object get_43_SfCalendar_VisibleMinDate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.VisibleMinDate;
        }
        private void set_43_SfCalendar_VisibleMinDate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.VisibleMinDate = (global::System.Object)Value;
        }
        private object get_44_SfCalendar_VisibleMaxDate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.VisibleMaxDate;
        }
        private void set_44_SfCalendar_VisibleMaxDate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.VisibleMaxDate = (global::System.Object)Value;
        }
        private object get_45_SfCalendar_DisabledCellTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.DisabledCellTemplate;
        }
        private void set_45_SfCalendar_DisabledCellTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.DisabledCellTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_46_SfCalendar_VisibleDates(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            return that.VisibleDates;
        }
        private void set_46_SfCalendar_VisibleDates(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfCalendar)instance;
            that.VisibleDates = (global::Syncfusion.UI.Xaml.Controls.Input.DateTimeCollection)Value;
        }
        private object get_47_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_47_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_48_EventTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_49_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_49_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_50_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_50_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_51_EventTriggerBehavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.AssociatedObject;
        }
        private object get_52_InvokeCommandAction_Command(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.Command;
        }
        private void set_52_InvokeCommandAction_Command(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_53_InvokeCommandAction_CommandParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.CommandParameter;
        }
        private void set_53_InvokeCommandAction_CommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_54_InvokeCommandAction_InputConverter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverter;
        }
        private void set_54_InvokeCommandAction_InputConverter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverter = (global::Windows.UI.Xaml.Data.IValueConverter)Value;
        }
        private object get_55_InvokeCommandAction_InputConverterParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterParameter;
        }
        private void set_55_InvokeCommandAction_InputConverterParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterParameter = (global::System.Object)Value;
        }
        private object get_56_InvokeCommandAction_InputConverterLanguage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterLanguage;
        }
        private void set_56_InvokeCommandAction_InputConverterLanguage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterLanguage = (global::System.String)Value;
        }
        private object get_57_MainPage_Vm(object instance)
        {
            var that = (global::Ethereality.MainPage)instance;
            return that.Vm;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Ethereality.Ethereality_XamlTypeInfo.XamlMember xamlMember = null;
            global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Ethereality.ViewModel.ViewModelLocator.Main":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Ethereality.ViewModel.ViewModelLocator");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Main", "Ethereality.ViewModel.MainViewModel");
                xamlMember.Getter = get_0_ViewModelLocator_Main;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.ScrollNextCommand":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "ScrollNextCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_1_SfCalendar_ScrollNextCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.ScrollPreviousCommand":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "ScrollPreviousCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_2_SfCalendar_ScrollPreviousCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.ScrollNextYearCommand":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "ScrollNextYearCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_3_SfCalendar_ScrollNextYearCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.ScrollPreviousYearCommand":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "ScrollPreviousYearCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_4_SfCalendar_ScrollPreviousYearCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.HeaderTemplate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SfCalendar_HeaderTemplate;
                xamlMember.Setter = set_5_SfCalendar_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.PreviousScrollButtonTemplate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "PreviousScrollButtonTemplate", "Windows.UI.Xaml.Controls.ControlTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_SfCalendar_PreviousScrollButtonTemplate;
                xamlMember.Setter = set_6_SfCalendar_PreviousScrollButtonTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.NextScrollButtonTemplate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "NextScrollButtonTemplate", "Windows.UI.Xaml.Controls.ControlTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_SfCalendar_NextScrollButtonTemplate;
                xamlMember.Setter = set_7_SfCalendar_NextScrollButtonTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.ShowNavigationButton":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "ShowNavigationButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_SfCalendar_ShowNavigationButton;
                xamlMember.Setter = set_8_SfCalendar_ShowNavigationButton;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.BlackOutCellTemplate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "BlackOutCellTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_SfCalendar_BlackOutCellTemplate;
                xamlMember.Setter = set_9_SfCalendar_BlackOutCellTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.CellTemplate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "CellTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_SfCalendar_CellTemplate;
                xamlMember.Setter = set_10_SfCalendar_CellTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.CellTemplateSelector":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "CellTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_SfCalendar_CellTemplateSelector;
                xamlMember.Setter = set_11_SfCalendar_CellTemplateSelector;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.BlackOutDates":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "BlackOutDates", "Syncfusion.UI.Xaml.Controls.Input.DateTimeCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_SfCalendar_BlackOutDates;
                xamlMember.Setter = set_12_SfCalendar_BlackOutDates;
                break;
            case "System.DateTime.Date":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Date", "System.DateTime");
                xamlMember.Getter = get_13_DateTime_Date;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Day":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Day", "Int32");
                xamlMember.Getter = get_14_DateTime_Day;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.DayOfWeek":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "DayOfWeek", "System.DayOfWeek");
                xamlMember.Getter = get_15_DateTime_DayOfWeek;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.DayOfYear":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "DayOfYear", "Int32");
                xamlMember.Getter = get_16_DateTime_DayOfYear;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Hour":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Hour", "Int32");
                xamlMember.Getter = get_17_DateTime_Hour;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Kind":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Kind", "System.DateTimeKind");
                xamlMember.Getter = get_18_DateTime_Kind;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Millisecond":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Millisecond", "Int32");
                xamlMember.Getter = get_19_DateTime_Millisecond;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Minute":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Minute", "Int32");
                xamlMember.Getter = get_20_DateTime_Minute;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Month":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Month", "Int32");
                xamlMember.Getter = get_21_DateTime_Month;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Second":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Second", "Int32");
                xamlMember.Getter = get_22_DateTime_Second;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Ticks":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Ticks", "Int64");
                xamlMember.Getter = get_23_DateTime_Ticks;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.TimeOfDay":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "TimeOfDay", "TimeSpan");
                xamlMember.Getter = get_24_DateTime_TimeOfDay;
                xamlMember.SetIsReadOnly();
                break;
            case "System.DateTime.Year":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.DateTime");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Year", "Int32");
                xamlMember.Getter = get_25_DateTime_Year;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.SelectionMode":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "SelectionMode", "Syncfusion.UI.Xaml.Controls.Input.SelectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_SfCalendar_SelectionMode;
                xamlMember.Setter = set_26_SfCalendar_SelectionMode;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.Appointment":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Appointment", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_SfCalendar_Appointment;
                xamlMember.Setter = set_27_SfCalendar_Appointment;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment.StartTime":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "StartTime", "System.DateTime");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_CalendarAppointment_StartTime;
                xamlMember.Setter = set_28_CalendarAppointment_StartTime;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment.EndTime":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "EndTime", "System.DateTime");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_CalendarAppointment_EndTime;
                xamlMember.Setter = set_29_CalendarAppointment_EndTime;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment.Subject":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Subject", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_CalendarAppointment_Subject;
                xamlMember.Setter = set_30_CalendarAppointment_Subject;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment.Color":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.CalendarAppointment");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Color", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_CalendarAppointment_Color;
                xamlMember.Setter = set_31_CalendarAppointment_Color;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.AppointmentTemplate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "AppointmentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_SfCalendar_AppointmentTemplate;
                xamlMember.Setter = set_32_SfCalendar_AppointmentTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.SelectedDateBackground":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "SelectedDateBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_SfCalendar_SelectedDateBackground;
                xamlMember.Setter = set_33_SfCalendar_SelectedDateBackground;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.SelectedDate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "SelectedDate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_SfCalendar_SelectedDate;
                xamlMember.Setter = set_34_SfCalendar_SelectedDate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.SelectedDates":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "SelectedDates", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Controls.Input.DateRange>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_SfCalendar_SelectedDates;
                xamlMember.Setter = set_35_SfCalendar_SelectedDates;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.DateRange.StartDate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.DateRange");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "StartDate", "System.DateTime");
                xamlMember.Getter = get_36_DateRange_StartDate;
                xamlMember.Setter = set_36_DateRange_StartDate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.DateRange.EndDate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.DateRange");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "EndDate", "System.DateTime");
                xamlMember.Getter = get_37_DateRange_EndDate;
                xamlMember.Setter = set_37_DateRange_EndDate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.DisplayDate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "DisplayDate", "Object");
                xamlMember.Getter = get_38_SfCalendar_DisplayDate;
                xamlMember.Setter = set_38_SfCalendar_DisplayDate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.DayNameCellTemplate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "DayNameCellTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_SfCalendar_DayNameCellTemplate;
                xamlMember.Setter = set_39_SfCalendar_DayNameCellTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.DayNameDisplayMode":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "DayNameDisplayMode", "Syncfusion.UI.Xaml.Controls.Input.DayNameDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_SfCalendar_DayNameDisplayMode;
                xamlMember.Setter = set_40_SfCalendar_DayNameDisplayMode;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.FirstDayofWeek":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "FirstDayofWeek", "System.DayOfWeek");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_SfCalendar_FirstDayofWeek;
                xamlMember.Setter = set_41_SfCalendar_FirstDayofWeek;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.Culture":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Culture", "System.Globalization.CultureInfo");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_SfCalendar_Culture;
                xamlMember.Setter = set_42_SfCalendar_Culture;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.VisibleMinDate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "VisibleMinDate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_SfCalendar_VisibleMinDate;
                xamlMember.Setter = set_43_SfCalendar_VisibleMinDate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.VisibleMaxDate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "VisibleMaxDate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_SfCalendar_VisibleMaxDate;
                xamlMember.Setter = set_44_SfCalendar_VisibleMaxDate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.DisabledCellTemplate":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "DisabledCellTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_SfCalendar_DisabledCellTemplate;
                xamlMember.Setter = set_45_SfCalendar_DisabledCellTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfCalendar.VisibleDates":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfCalendar");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "VisibleDates", "Syncfusion.UI.Xaml.Controls.Input.DateTimeCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_SfCalendar_VisibleDates;
                xamlMember.Setter = set_46_SfCalendar_VisibleDates;
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_47_Interaction_Behaviors;
                xamlMember.Setter = set_47_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_EventTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_49_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_50_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.AssociatedObject":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_51_EventTriggerBehavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.Command":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_InvokeCommandAction_Command;
                xamlMember.Setter = set_52_InvokeCommandAction_Command;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.CommandParameter":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_InvokeCommandAction_CommandParameter;
                xamlMember.Setter = set_53_InvokeCommandAction_CommandParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverter":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "InputConverter", "Windows.UI.Xaml.Data.IValueConverter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_InvokeCommandAction_InputConverter;
                xamlMember.Setter = set_54_InvokeCommandAction_InputConverter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterParameter":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "InputConverterParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_InvokeCommandAction_InputConverterParameter;
                xamlMember.Setter = set_55_InvokeCommandAction_InputConverterParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterLanguage":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "InputConverterLanguage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_InvokeCommandAction_InputConverterLanguage;
                xamlMember.Setter = set_56_InvokeCommandAction_InputConverterLanguage;
                break;
            case "Ethereality.MainPage.Vm":
                userType = (global::Ethereality.Ethereality_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Ethereality.MainPage");
                xamlMember = new global::Ethereality.Ethereality_XamlTypeInfo.XamlMember(this, "Vm", "Ethereality.ViewModel.MainViewModel");
                xamlMember.Getter = get_57_MainPage_Vm;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Ethereality.Ethereality_XamlTypeInfo.XamlSystemBaseType
    {
        global::Ethereality.Ethereality_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Ethereality.Ethereality_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Ethereality.Ethereality_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Ethereality.Ethereality_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

